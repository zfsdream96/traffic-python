总目标：
    1. 根据出租车数据，求所有区域（99个区域）之间的运营里程，运营时间，和运营金额。
    2. 找出所有空缺区域，用其他值fill缺值
    3. 提炼出所有绝对区域对距离

限制条件：
    1. 运营里程数大于1且小于65，
    2. 两区域间运营次数大于4的才认为是有意义
    3. 对于没有数据的区域，或数据量太小(合并成99个区域后count<4)的区域，用临近区域距离数据替代

总思路：
    1. 从database中提取出所有db原始数据 --- Oracle --- count来计数/union来连接多个表格/ceil求临近整数/stdev除去偏差 --- program - 1-1 TSK.sql/1-2sql output
    2. 对db数据的位置信息进行划分处理 --- python --- 字典使用/dataframe操作/isin函数效率提升/ --- program/output - 2-1 TSK.py/2-2 python output.xlsx
    3. 对划分成99个区域后的数据进行二次合并 --- Access --- group by/sum/stddev/avg --- program/output - 3-1 TSK.accdb/3-2 access output.xlsx
    4. 将count<4的数据(缺值1)移动至其他表，等待与缺值表(缺值2)合并 --- excel --- 合并即可 --- output - 4-1 excel output.xlsx
    -------------------------------------------------------------目标1完成 分割线-------------------------------------------------------------------------
    5. 对缺值1进行区域对正反变化，对于有绝对对的对用对应对替代(解释1) --- excel --- hash_rehash值法/vlookup(解释2) --- other output - 未知待会儿再想输出怎么处理
    6. 找出所有缺失相对对(contain A-B and B-A) (根据思路3输出结果) --- python --- set_index改索引/set去重/dict(zip())合并list并生成字典/pd.dataframe([ ],index)生成新的df --- program - 6-1 TSK.py
    7. 合并思路5中无法替代的对(一定是绝对对)和思路6中的对(相对对)，组成缺值集合(缺值3) --- excel --- 合并即可 ---other output - 未知
    -------------------------------------------------------------目标2找出所有空缺区域完成 分割线-------------------------------------------------------
    8. 放大缺值区域，生成区域方法字典文件（解释3） --- python --- 两个for循环遍历矩形区域所有点 --- python code - 8-1 TSK.py
    9. 用放大区域替代原始起点或终点，取每个放大后区域到终点的距离的平均值为替代值替代缺失对的距离值 --- python/access --- 连接access查值(解释4)/字典生成dataframe --- program - 9-1 TSK.py/9-2 TSK.accdb
    10. 对于放大很多后任然没有距离的点对，用gps距离加一定值替代 (解释5) --- python --- gps位置距离函数 --- program - 10-1 TSK.py
    11. 合并思路5, 10文件，生成目标2需要文件 --- excel --- 合并即可 --- result - 还没想 
    -------------------------------------------------------------目标2用其他值fill缺值完成 分割线---------------------------------------------------------
    11. 合并目标1生成文件 result1 和 目标2生成文件 result2，进行相对对去重生成绝对对 (解释6) --- python --- pd.df.drop() --- program - 11-1 TSK.py
    -------------------------------------------------------------目标3完成 分割线-------------------------------------------------------------------------

解释：
    1. if exist A-B count<4 & B-A>4, distance(A-B) = distance(B-A), or 用差值法替代
    2. hash = 1000*O+D, rehash = 1000*D+O，若hash列中存在与rehash列相同的值，则该区域对中存在与之相反的对(互为互补对)，用vlookup函数查找，再用排序即可得
    3. 这里可以直接生成所有位置的放大字典 省去重新读取缺值3文件的时间
    4. 需要先行将思路4去除count<4的表导入到新的数据库中
    5. 取每个区域围城的矩形的中值代表该区域的位置
    6. 注意这里会剔除掉 A-A形式对 最后放入总表进行hash rehash比较找出问题